{"version":3,"file":"blocks/md-cover-cta/index.js","mappings":"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;IACnBgC,KAAK,EAAE;MAACM,QAAQ,EAAE7B;IAAgB;EAAE,CACrC,CACA,CAEJ,CAAC,EACLR,WAAW,IACVa,oDAAA;IAAKC,SAAS,EAAC;EAA6B,GACxCD,oDAAA;IAAKC,SAAS,EAAC;EAAkB,GAC/BD,oDAAA;IAAKU,GAAG,EAAEvB,WAAY;IAACwB,GAAG,EAAC;EAAO,CAAE,CACjC,CACJ,CAEN,CACJ,CACJ,CACJ,CACF,CAAC;AAEV;;;;;;;;;;;AC5FA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-anitian-fse-full/./src/blocks/md-cover-cta/edit.js","webpack://md-anitian-fse-full/./src/blocks/md-cover-cta/index.js","webpack://md-anitian-fse-full/./src/blocks/md-cover-cta/save.js","webpack://md-anitian-fse-full/./src/blocks/md-cover-cta/style.scss?250d","webpack://md-anitian-fse-full/external window \"React\"","webpack://md-anitian-fse-full/external window [\"wp\",\"blockEditor\"]","webpack://md-anitian-fse-full/external window [\"wp\",\"blocks\"]","webpack://md-anitian-fse-full/external window [\"wp\",\"components\"]","webpack://md-anitian-fse-full/external window [\"wp\",\"element\"]","webpack://md-anitian-fse-full/external window [\"wp\",\"i18n\"]","webpack://md-anitian-fse-full/webpack/bootstrap","webpack://md-anitian-fse-full/webpack/runtime/chunk loaded","webpack://md-anitian-fse-full/webpack/runtime/compat get default export","webpack://md-anitian-fse-full/webpack/runtime/define property getters","webpack://md-anitian-fse-full/webpack/runtime/hasOwnProperty shorthand","webpack://md-anitian-fse-full/webpack/runtime/make namespace object","webpack://md-anitian-fse-full/webpack/runtime/jsonp chunk loading","webpack://md-anitian-fse-full/webpack/before-startup","webpack://md-anitian-fse-full/webpack/startup","webpack://md-anitian-fse-full/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport {\n  useBlockProps,\n  RichText,\n  InspectorControls,\n  MediaUpload,\n  PanelColorSettings\n} from \"@wordpress/block-editor\";\n\nimport {\n  PanelBody,\n  Button,\n  SelectControl,\n  FontSizePicker\n} from \"@wordpress/components\";\n\nimport { useState } from \"@wordpress/element\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const { \n    title,\n    heading_content,\n    button_link,\n    cover_image,\n    background_image,\n    background_color,\n    cover_cta_style,\n    title_font_size,\n    title_font_color,\n    heading_content_font_size,\n    heading_content_font_color,\n    button_font_size\n  } = attributes;\n\n  const fontSizes = [\n    {\n      name: __(\"S\"),\n      slug: \"small\",\n      size: \"12px\",\n    },\n    {\n      name: __(\"M\"),\n      slug: \"medium\",\n      size: \"18px\",\n    },\n    {\n      name: __(\"L\"),\n      slug: \"large\",\n      size: \"26px\",\n    },\n    {\n      name: __(\"XL\"),\n      slug: \"xtra-large\",\n      size: \"48px\",\n    },\n  ];\n\n  return (\n    <div {...useBlockProps({className: \"md_anitian_cover_cta_section\"})}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\", \"md-storyful-fse-full\")}>\n          <label>{__(\"Background Image\")}</label>\n          <div className=\"md_bg_image_remove\">\n            <Button\n              onClick={() => setAttributes({ background_image: \"\" })}\n            >\n              {__(\"Remove Image\", \"md-anitian-fse-full\")}\n            </Button>\n          </div>\n          <MediaUpload\n            title={__(\"Background Image\")}\n            onSelect={(media) =>\n              setAttributes({\n                background_image: media.url,\n              })\n            }\n            multiple={false}\n            render={({ open }) => (\n              <>\n                <Button className=\"md_bg_image_upload\" onClick={open}>\n                  {background_image == \"\" ? (\n                    <i className=\"dashicons dashicons-format-image\"> </i>\n                  ) : (\n                    <img src={background_image} alt=\"background\" />\n                  )}\n                </Button>\n              </>\n            )}\n          />\n          <SelectControl \n            label={__(\"Cover CTA Style\", \"md-anitian-fse-full\")}\n            value={cover_cta_style}\n            options={[\n              { label: \"Style 1\", value: \"style1\" },\n              { label: \"Style 2\", value: \"style2\" },\n              { label: \"Style 3\", value: \"style3\" },\n            ]}\n            onChange={(value) => setAttributes({ cover_cta_style: value })}\n          />\n        </PanelBody>\n        <PanelBody title={__(\"Typography\", \"md-storyful-fse-full\")}>\n          <label>{__(\"Title Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={title_font_size}\n            onChange={(value) => setAttributes({ title_font_size: value })}\n          />\n          <label>{__(\"Heading Content Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={heading_content_font_size}\n            onChange={(value) => setAttributes({ heading_content_font_size: value })}\n          />\n          <label>{__(\"Button Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={button_font_size}\n            onChange={(value) => setAttributes({ button_font_size: value })}\n          />\n        </PanelBody>\n        <PanelColorSettings\n          title={__(\"Typography Colors\", \"md-storyful-fse-full\")}\n          initialOpen={false}\n          colorSettings={[\n            {\n              value: title_font_color,\n              onChange: (value) => setAttributes({ title_font_color: value }),\n              label: __(\"Title Color\", \"md-storyful-fse-full\"),\n            },\n            {\n              value: heading_content_font_color,\n              onChange: (value) => setAttributes({ heading_content_font_color: value }),\n              label: __(\"Heading Content Color\", \"md-storyful-fse-full\"),\n            },\n            {\n              value: background_color,\n              onChange: (value) => setAttributes({ background_color: value }),\n              label: __(\"Background Color\", \"md-storyful-fse-full\"),\n            }\n          ]}\n        />\n      </InspectorControls>\n      <div className={`md_anitian_cover_cta_wrap ${cover_cta_style}`} style={{backgroundColor: background_color}}>\n        {cover_cta_style !== \"style1\" && (\n          <div className=\"md_anitian_cover_cta_arc\"></div>\n        )}\n          <div className=\"md_anitian_cover_cta\" style={{backgroundImage: `url(${background_image})`}}>\n            {cover_cta_style === \"style1\" && (\n              <div className=\"background_overlay\" style={{background: `linear-gradient(180deg, ${background_color} 0%, ${background_color} 100%)`}}>\n              </div>\n            )}\n              <div className=\"container\">\n                  <div className=\"md_anitian_cover_cta__inner\">\n                      <div className=\"md_anitian_cover_cta__heading\">\n                        <RichText\n                          tagName=\"h2\"\n                          value={title}\n                          onChange={(value) => setAttributes({ title: value })}\n                          placeholder={__(\"Enter Title\", \"md-anitian-fse-full\")}\n                          style={{fontSize: title_font_size, color: title_font_color}}\n                        />\n                        <RichText\n                          tagName=\"p\"\n                          value={heading_content}\n                          onChange={(value) => setAttributes({ heading_content: value })}\n                          placeholder={__(\"Enter Content\", \"md-anitian-fse-full\")}\n                          style={{fontSize: heading_content_font_size, color: heading_content_font_color}}\n                        />\n                        <div className=\"md_anitian_cover_cta__btn\">\n                            <RichText\n                              tagName=\"p\"\n                              className=\"btn-anitian md_anitian_cover_cta__btn\"\n                              value={button_link}\n                              onChange={(value) => setAttributes({ button_link: value })}\n                              placeholder={__(\"Enter Button Link\", \"md-anitian-fse-full\")}\n                              style={{fontSize: button_font_size}}\n                            />\n                        </div>\n                      </div>\n                      <div className=\"md_anitian_cover_cta__image\">\n                          <div className=\"cover_cta__image\">\n                            <MediaUpload\n                              title={__(\"Cover Image\")}\n                              onSelect={(media) =>\n                                setAttributes({\n                                  cover_image: media.url,\n                                })\n                              }\n                              multiple={false}\n                              render={({ open }) => (\n                                <>\n                                  <Button className=\"md_cover_image_upload\" onClick={open}>\n                                    {cover_image == \"\" ? (\n                                      <i className=\"dashicons dashicons-format-image\"> </i>\n                                    ) : (\n                                      <img src={cover_image} alt=\"cover\" />\n                                    )}\n                                  </Button>\n                                </>\n                              )}\n                            />\n                            <Button className=\"md_cover_image_remove\" onClick={() => setAttributes({ cover_image: \"\" })}>\n                              {__(\"Remove Image\", \"md-anitian-fse-full\")}\n                            </Button>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, RichText } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const { \n    title,\n    heading_content,\n    button_link,\n    cover_image,\n    background_image,\n    background_color,\n    cover_cta_style,\n    title_font_size,\n    title_font_color,\n    heading_content_font_size,\n    heading_content_font_color,\n    button_font_size\n  } = attributes;\n  \n  return (\n    <div\n      {...useBlockProps.save({\n        className: \"md_anitian_cover_cta_section\",\n      })}\n    >\n      <div className={`md_anitian_cover_cta_wrap ${cover_cta_style}`} style={{backgroundColor: background_color}}>\n        {cover_cta_style !== \"style1\" && (\n          <div className=\"md_anitian_cover_cta_arc\"></div>\n        )}\n          <div className=\"md_anitian_cover_cta\" style={{backgroundImage: `url(${background_image})`}}>\n            {cover_cta_style === \"style1\" && (\n              <div className=\"background_overlay\" style={{background: `linear-gradient(180deg, ${background_color} 0%, ${background_color} 100%)`}}>\n              </div>\n            )}\n              <div className=\"container\">\n                  <div className=\"md_anitian_cover_cta__inner\">\n                      <div className=\"md_anitian_cover_cta__heading\">\n                        <RichText.Content\n                          tagName=\"h2\"\n                          value={title}\n                          style={{fontSize: title_font_size, color: title_font_color}}\n                        />\n                        <RichText.Content\n                          tagName=\"p\"\n                          value={heading_content}\n                          style={{fontSize: heading_content_font_size, color: heading_content_font_color}}\n                        />\n                        {button_link && (\n                          <div className=\"md_anitian_cover_cta__btn\">\n                              <RichText.Content\n                                tagName=\"p\"\n                                className=\"btn-anitian md_anitian_cover_cta__btn\"\n                                value={button_link}\n                                style={{fontSize: button_font_size}}\n                              />\n                          </div>\n                        )}\n                      </div>\n                      {cover_image && (\n                        <div className=\"md_anitian_cover_cta__image\">\n                            <div className=\"cover_cta__image\">\n                              <img src={cover_image} alt=\"cover\" />\n                            </div>\n                        </div>\n                      )}\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-cover-cta/index\": 0,\n\t\"blocks/md-cover-cta/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_anitian_fse_full\"] = self[\"webpackChunkmd_anitian_fse_full\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-cover-cta/style-index\"], () => (__webpack_require__(\"./src/blocks/md-cover-cta/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","InspectorControls","MediaUpload","PanelColorSettings","PanelBody","Button","SelectControl","FontSizePicker","useState","Edit","attributes","setAttributes","title","heading_content","button_link","cover_image","background_image","background_color","cover_cta_style","title_font_size","title_font_color","heading_content_font_size","heading_content_font_color","button_font_size","fontSizes","name","slug","size","createElement","className","onClick","onSelect","media","url","multiple","render","open","Fragment","src","alt","label","value","options","onChange","initialOpen","colorSettings","style","backgroundColor","backgroundImage","background","tagName","placeholder","fontSize","color","registerBlockType","save","metadata","edit","Content"],"sourceRoot":""}