{"version":3,"file":"blocks/md-cta-text/index.js","mappings":"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;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-woodward/./src/blocks/md-cta-text/edit.js","webpack://md-woodward/./src/blocks/md-cta-text/index.js","webpack://md-woodward/./src/blocks/md-cta-text/save.js","webpack://md-woodward/./src/blocks/md-cta-text/style.scss","webpack://md-woodward/external window \"React\"","webpack://md-woodward/external window [\"wp\",\"blockEditor\"]","webpack://md-woodward/external window [\"wp\",\"blocks\"]","webpack://md-woodward/external window [\"wp\",\"components\"]","webpack://md-woodward/external window [\"wp\",\"element\"]","webpack://md-woodward/external window [\"wp\",\"i18n\"]","webpack://md-woodward/webpack/bootstrap","webpack://md-woodward/webpack/runtime/chunk loaded","webpack://md-woodward/webpack/runtime/compat get default export","webpack://md-woodward/webpack/runtime/define property getters","webpack://md-woodward/webpack/runtime/hasOwnProperty shorthand","webpack://md-woodward/webpack/runtime/make namespace object","webpack://md-woodward/webpack/runtime/jsonp chunk loading","webpack://md-woodward/webpack/before-startup","webpack://md-woodward/webpack/startup","webpack://md-woodward/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport {\n  useBlockProps,\n  RichText,\n  InspectorControls,\n  MediaUpload,\n  PanelColorSettings,\n} from \"@wordpress/block-editor\";\n\nimport { Fragment } from \"@wordpress/element\";\n\nimport {\n  PanelBody,\n  Button,\n  ToggleControl,\n  GradientPicker,\n} from \"@wordpress/components\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    backgroundImage,\n    headingContent,\n    buttonLink,\n    headingContentColor,\n    showButton,\n    buttonColor,\n    buttonBackgroundColor,\n    buttonHoverColor,\n    buttonHoverBackgroundColor,\n  } = attributes;\n\n  return (\n    <div {...useBlockProps({ className: \"md_woodward_cta\" })}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\")} initialOpen={true}>\n          <div className=\"setting-row\">\n            <label htmlFor=\"background-image\">\n              {__(\"Background Image\", \"md-prime\")}\n            </label>\n            <div>\n              {!backgroundImage ? (\n                <MediaUpload\n                  onSelect={(selectedImage) => {\n                    setAttributes({\n                      backgroundImage: selectedImage.url,\n                    });\n                  }}\n                  allowedTypes={[\"image\"]}\n                  value={backgroundImage}\n                  render={({ open }) => (\n                    <Button onClick={open} className=\"button button-large\">\n                      {__(\"Upload Image\", \"md-prime\")}\n                    </Button>\n                  )}\n                />\n              ) : (\n                <>\n                  <div className=\"image-preview\">\n                    <img src={backgroundImage} alt=\"Background-image-preview\" />\n                  </div>\n                  <Button\n                    onClick={() => {\n                      setAttributes({\n                        backgroundImage: \"\",\n                      });\n                    }}\n                    className=\"is-link is-destructive\"\n                  >\n                    {__(\"Remove Image\", \"md-prime\")}\n                  </Button>\n                </>\n              )}\n            </div>\n          </div>\n          <ToggleControl\n            label={__(\"Show Button\", \"md-woodward\")}\n            checked={showButton}\n            onChange={(value) => setAttributes({ showButton: value })}\n          />\n          {showButton && (\n            <div className=\"settings-row\">\n              <PanelColorSettings\n                title={__(\"Button Color Settings\", \"md-storyful-fse-full\")}\n                initialOpen={false}\n                colorSettings={[\n                  {\n                    value: buttonColor,\n                    onChange: (newColor) =>\n                      setAttributes({ buttonColor: newColor }),\n                    label: __(\"Button Font Color\"),\n                  },\n                  {\n                    value: buttonHoverColor,\n                    onChange: (newColor) =>\n                      setAttributes({ buttonHoverColor: newColor }),\n                    label: __(\"Button Hover Font Color\"),\n                  },\n                ]}\n              />\n              <div className=\"settings-row\">\n                <label htmlFor=\"buttonBackgroundColor\">\n                  {__(\"Button Background Color\")}\n                </label>\n                <GradientPicker\n                  id=\"buttonBackgroundColor\"\n                  label={__(\"Button Background Color\")}\n                  value={buttonBackgroundColor ? buttonBackgroundColor : null}\n                  onChange={(value) =>\n                    setAttributes({ buttonBackgroundColor: value })\n                  }\n                  gradients={[\n                    {\n                      name: \"Gradient 1\",\n                      gradient:\n                        \"linear-gradient(90deg, #C73727 0%, #E76A24 100.28%)\",\n                    },\n                    {\n                      name: \"Gradient 2\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                    {\n                      name: \"Gradient 3\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                  ]}\n                />\n              </div>\n              <div className=\"settings-row\">\n                <label htmlFor=\"buttonHoverBackgroundColor\">\n                  {__(\"Button Hover Background Color\")}\n                </label>\n                <GradientPicker\n                  id=\"buttonHoverBackgroundColor\"\n                  label={__(\"Button Hover Background Color\")}\n                  value={\n                    buttonHoverBackgroundColor\n                      ? buttonHoverBackgroundColor\n                      : null\n                  }\n                  onChange={(value) =>\n                    setAttributes({ buttonHoverBackgroundColor: value })\n                  }\n                  gradients={[\n                    {\n                      name: \"Gradient 1\",\n                      gradient:\n                        \"linear-gradient(90deg, #C73727 0%, #E76A24 100.28%)\",\n                    },\n                    {\n                      name: \"Gradient 2\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                    {\n                      name: \"Gradient 3\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                  ]}\n                />\n              </div>\n            </div>\n          )}\n        </PanelBody>\n        <PanelBody\n          title={__(\"Color Settings\", \"md-woodward\")}\n          initialOpen={false}\n        >\n          <PanelColorSettings\n            title={__(\"Typography Colors\", \"md-woodward\")}\n            initialOpen={false}\n            colorSettings={[\n              {\n                value: headingContentColor,\n                onChange: (colorValue) =>\n                  setAttributes({ headingContentColor: colorValue }),\n                label: __(\"Heading Content Color\", \"md-woodward\"),\n              },\n            ]}\n          />\n        </PanelBody>\n      </InspectorControls>\n      <div className={`md_woodward_cta_text_wrap`} style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <style>\n          {`\n            .md_woodward_cta_text__btn {\n              color: ${buttonColor} !important;\n              background: ${buttonBackgroundColor} !important;\n            }\n            .md_woodward_cta_text__btn:hover {\n              color: ${buttonHoverColor} !important;\n              background: ${buttonHoverBackgroundColor} !important;\n            }\n          `}\n        </style>\n        <div className=\"md_woodward_cta_text\">\n          <div className=\"container\">\n            <div className=\"md_woodward_cta_text__inner\">\n              <div className=\"md_woodward_cta_text__heading\">\n                <RichText\n                  tagName=\"p\"\n                  className=\"md_woodward_cta_text__content\"\n                  value={headingContent}\n                  onChange={(value) => setAttributes({ headingContent: value })}\n                  placeholder={__(\"Enter Content\", \"md-woodward\")}\n                  style={{\n                    color: headingContentColor,\n                  }}\n                />\n                {showButton && (\n                  <div className=\"md_woodward_cta_text__btn_wrapper\">\n                    <RichText\n                      className=\"btn-anitian md_woodward_cta_text__btn \"\n                      tagName=\"p\"\n                      value={buttonLink}\n                      onChange={(value) => setAttributes({ buttonLink: value })}\n                      placeholder={__(\"Enter Button Text\", \"md-woodward\")}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, RichText } from \"@wordpress/block-editor\";\n\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const {\n    backgroundImage,\n    headingContent,\n    buttonLink,\n    headingContentColor,\n    showButton,\n    buttonColor,\n    buttonBackgroundColor,\n    buttonHoverColor,\n    buttonHoverBackgroundColor,\n  } = attributes;\n\n  return (\n    <div {...useBlockProps.save({ className: \"md_woodward_cta\" })}>\n      <div className={`md_woodward_cta_text_wrap`} style={{ backgroundImage: `url(${backgroundImage})` }}>\n        <style>\n          {`\n            .md_woodward_cta_text__btn {\n              color: ${buttonColor} !important;\n              background: ${buttonBackgroundColor} !important;\n            }\n            .md_woodward_cta_text__btn:hover {\n              color: ${buttonHoverColor} !important;\n              background: ${buttonHoverBackgroundColor} !important;\n            }\n          `}\n        </style>\n        <div className=\"md_woodward_cta_text\">\n          <div className=\"container\">\n            <div className=\"md_woodward_cta_text__inner\">\n              <div className=\"md_woodward_cta_text__heading\">\n                <RichText.Content\n                  tagName=\"p\"\n                  className=\"md_woodward_cta_text__content\"\n                  value={headingContent}\n                  placeholder={__(\"Enter Content\", \"md-woodward\")}\n                  style={{\n                    color: headingContentColor,\n                  }}\n                />\n                {showButton && (\n                  <div className=\"md_woodward_cta_text__btn_wrapper\">\n                    <RichText.Content\n                      className=\"btn-anitian md_woodward_cta_text__btn\"\n                      tagName=\"p\"\n                      value={buttonLink}\n                      placeholder={__(\"Enter Button Text\", \"md-woodward\")}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-cta-text/index\": 0,\n\t\"blocks/md-cta-text/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_woodward\"] = self[\"webpackChunkmd_woodward\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-cta-text/style-index\"], () => (__webpack_require__(\"./src/blocks/md-cta-text/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","InspectorControls","MediaUpload","PanelColorSettings","Fragment","PanelBody","Button","ToggleControl","GradientPicker","Edit","attributes","setAttributes","backgroundImage","headingContent","buttonLink","headingContentColor","showButton","buttonColor","buttonBackgroundColor","buttonHoverColor","buttonHoverBackgroundColor","createElement","className","title","initialOpen","htmlFor","onSelect","selectedImage","url","allowedTypes","value","render","open","onClick","src","alt","label","checked","onChange","colorSettings","newColor","id","gradients","name","gradient","colorValue","style","tagName","placeholder","color","registerBlockType","save","metadata","edit","Content"],"sourceRoot":""}