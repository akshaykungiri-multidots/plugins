{"version":3,"file":"blocks/md-timeline-phase/index.js","mappings":"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UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-anitian-fse-v2/./src/blocks/md-timeline-phase/edit.js","webpack://md-anitian-fse-v2/./src/blocks/md-timeline-phase/index.js","webpack://md-anitian-fse-v2/./src/blocks/md-timeline-phase/save.js","webpack://md-anitian-fse-v2/./src/blocks/md-timeline-phase/editor.scss?3340","webpack://md-anitian-fse-v2/./src/blocks/md-timeline-phase/style.scss?2728","webpack://md-anitian-fse-v2/external window \"React\"","webpack://md-anitian-fse-v2/external window [\"wp\",\"blockEditor\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"blocks\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"components\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"i18n\"]","webpack://md-anitian-fse-v2/webpack/bootstrap","webpack://md-anitian-fse-v2/webpack/runtime/chunk loaded","webpack://md-anitian-fse-v2/webpack/runtime/compat get default export","webpack://md-anitian-fse-v2/webpack/runtime/define property getters","webpack://md-anitian-fse-v2/webpack/runtime/hasOwnProperty shorthand","webpack://md-anitian-fse-v2/webpack/runtime/make namespace object","webpack://md-anitian-fse-v2/webpack/runtime/jsonp chunk loading","webpack://md-anitian-fse-v2/webpack/before-startup","webpack://md-anitian-fse-v2/webpack/startup","webpack://md-anitian-fse-v2/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/\n */\nimport {\n  useBlockProps,\n  RichText,\n  MediaUploadCheck,\n  MediaUpload,\n  PanelColorSettings,\n  InspectorControls,\n} from \"@wordpress/block-editor\";\n\n/**\n * React hook that is used to mark the components element.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nimport {\n  PanelBody,\n  ToggleControl,\n  Tooltip,\n  Button,\n} from \"@wordpress/components\";\n\nimport \"./editor.scss\";\n\nimport placeholder from \"./placeholder-image.png\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @param root0\n * @param root0.attributes\n * @param root0.attributes.heading\n * @param root0.setAttributes\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    phaseIcon,\n    aheadHeading,\n    enableAheadContent,\n    aheadContent,\n    behindHeading,\n    enableBehindContent,\n    behindContent,\n    enableAheadPhaseImage,\n    aheadPhaseImage,\n    enableBehindPhaseImage,\n    behindPhaseImage,\n    aheadHeadingColor,\n    aheadContentColor,\n    behindHeadingColor,\n    behindContentColor,\n    aheadPhaseImageBGColor,\n    behindPhaseImageBGColor,\n  } = attributes;\n\n  const siteURL = window.location.origin;\n\n  return (\n    <div {...useBlockProps()}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\", \"md-anitian\")}>\n          <ToggleControl\n            label={__(\"Enable Ahead Phase Image\", \"md-anitian\")}\n            checked={enableAheadPhaseImage}\n            onChange={(value) =>\n              setAttributes({ enableAheadPhaseImage: value })\n            }\n          />\n          <ToggleControl\n            label={__(\"Enable Behind Phase Image\", \"md-anitian\")}\n            checked={enableBehindPhaseImage}\n            onChange={(value) =>\n              setAttributes({ enableBehindPhaseImage: value })\n            }\n          />\n          <ToggleControl\n            label={__(\"Enable Ahead Content\", \"md-anitian\")}\n            checked={enableAheadContent}\n            onChange={(value) => setAttributes({ enableAheadContent: value })}\n          />\n          <ToggleControl\n            label={__(\"Enable Behind Content\", \"md-anitian\")}\n            checked={enableBehindContent}\n            onChange={(value) => setAttributes({ enableBehindContent: value })}\n          />\n        </PanelBody>\n        <PanelBody title={__(\"Color Settings\")} initialOpen={false}>\n          <PanelColorSettings\n            title={__(\"Color Settings\", \"md-anitian\")}\n            colorSettings={[\n              {\n                value: aheadHeadingColor,\n                onChange: (value) =>\n                  setAttributes({ aheadHeadingColor: value }),\n                label: __(\"Ahead Heading Color\", \"md-anitian\"),\n              },\n              {\n                value: aheadContentColor,\n                onChange: (value) =>\n                  setAttributes({ aheadContentColor: value }),\n                label: __(\"Ahead Content Color\", \"md-anitian\"),\n              },\n              {\n                value: aheadPhaseImageBGColor,\n                onChange: (value) =>\n                  setAttributes({ aheadPhaseImageBGColor: value }),\n                label: __(\"Ahead Phase Image BG Color\", \"md-anitian\"),\n              },\n              {\n                value: behindHeadingColor,\n                onChange: (value) =>\n                  setAttributes({ behindHeadingColor: value }),\n                label: __(\"Behind Heading Color\", \"md-anitian\"),\n              },\n              {\n                value: behindContentColor,\n                onChange: (value) =>\n                  setAttributes({ behindContentColor: value }),\n                label: __(\"Behind Content Color\", \"md-anitian\"),\n              },\n              {\n                value: behindPhaseImageBGColor,\n                onChange: (value) =>\n                  setAttributes({ behindPhaseImageBGColor: value }),\n                label: __(\"Behind Phase Image BG Color\", \"md-anitian\"),\n              },\n            ]}\n          />\n        </PanelBody>\n      </InspectorControls>\n      <div className=\"md_timeline_phase\">\n        <div className=\"md_timeline_phase_block ahead\">\n          <div className=\"md_timeline_phase_wrapper\">\n            <div className=\"md_timeline_phase_icon\">\n              <div className=\"md-prime-block-control image-preview image-controle-visible-hover\">\n                <div className={`image-controls small-icons icon-center-fixed`}>\n                  <MediaUploadCheck>\n                    <MediaUpload\n                      onSelect={(media) =>\n                        setAttributes({\n                          phaseIcon: media.url,\n                        })\n                      }\n                      allowedTypes={[\"image\"]}\n                      value={phaseIcon}\n                      render={({ open }) => (\n                        <>\n                          {phaseIcon ? (\n                            <>\n                              <Tooltip text={__(\"Edit Image\", \"md-prime\")}>\n                                <i\n                                  className=\"dashicons dashicons-edit edit-image\"\n                                  onClick={open}\n                                  role=\"button\"\n                                  tabIndex={0}\n                                  onKeyDown={(e) => {\n                                    if (e.key === \"Enter\" || e.key === \" \") {\n                                      e.preventDefault(); // Prevent default action for space key\n                                      open(); // Trigger the click handler\n                                    }\n                                  }}\n                                  aria-label={__(\"Edit image\", \"md-prime\")}\n                                ></i>\n                              </Tooltip>\n                              <Tooltip text={__(\"Remove Image\", \"md-prime\")}>\n                                <i\n                                  className=\"dashicons dashicons-no-alt remove-image\"\n                                  onClick={() => {\n                                    const toDelete =\n                                      // eslint-disable-next-line no-alert\n                                      confirm(\n                                        __(\n                                          \"Are you sure you want to delete this image?\",\n                                          \"md-prime\"\n                                        )\n                                      );\n                                    if (toDelete) {\n                                      setAttributes({\n                                        phaseIcon: \"\",\n                                      });\n                                    }\n                                  }}\n                                  role=\"button\"\n                                  tabIndex={0}\n                                  onKeyDown={(e) => {\n                                    if (e.key === \"Enter\" || e.key === \" \") {\n                                      e.preventDefault();\n                                      setAttributes({ phaseIcon: \"\" });\n                                    }\n                                  }}\n                                  aria-label={__(\"Remove image\", \"md-prime\")}\n                                ></i>\n                              </Tooltip>\n                            </>\n                          ) : (\n                            <div className=\"upload-wrap\">\n                              <Button\n                                onClick={open}\n                                className=\"button media_and_text__upload_btn\"\n                              >\n                                <Tooltip text={__(\"Upload Image\", \"md-prime\")}>\n                                  <i className=\"dashicons dashicons-upload\"></i>\n                                </Tooltip>\n                              </Button>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    />\n                  </MediaUploadCheck>\n                </div>\n                {phaseIcon ? (\n                  <img src={phaseIcon} alt={\"Slider Icon\"} />\n                ) : (\n                  <img src={siteURL + placeholder} alt={\"Slider Icon\"} />\n                )}\n              </div>\n            </div>\n            <div className=\"md_timeline_phase_content\">\n              <div\n                className=\"timeline__phase-card\"\n                style={\n                  enableAheadPhaseImage\n                    ? {\n                        background: `linear-gradient(90deg, #f7f7f7 75%, ${aheadPhaseImageBGColor} 25%)`,\n                      }\n                    : {\n                        background: \"#f7f7f7\",\n                      }\n                }\n              >\n                <RichText\n                  style={{ color: aheadHeadingColor }}\n                  tagName=\"h4\"\n                  className=\"heading\"\n                  name=\"heading\"\n                  placeholder={__(\"Enter Title\")}\n                  value={aheadHeading}\n                  onChange={(value) => setAttributes({ aheadHeading: value })}\n                />\n                {enableAheadPhaseImage && (\n                  <div className=\"timeline__phase-image\">\n                    <div className=\"md-prime-block-control image-preview image-controle-visible-hover\">\n                      <div\n                        className={`image-controls small-icons icon-center-fixed`}\n                      >\n                        <MediaUploadCheck>\n                          <MediaUpload\n                            onSelect={(media) =>\n                              setAttributes({\n                                aheadPhaseImage: media.url,\n                              })\n                            }\n                            allowedTypes={[\"image\"]}\n                            value={aheadPhaseImage}\n                            render={({ open }) => (\n                              <>\n                                {aheadPhaseImage ? (\n                                  <>\n                                    <Tooltip\n                                      text={__(\"Edit Image\", \"md-prime\")}\n                                    >\n                                      <i\n                                        className=\"dashicons dashicons-edit edit-image\"\n                                        onClick={open}\n                                        role=\"button\"\n                                        tabIndex={0}\n                                        onKeyDown={(e) => {\n                                          if (\n                                            e.key === \"Enter\" ||\n                                            e.key === \" \"\n                                          ) {\n                                            e.preventDefault(); // Prevent default action for space key\n                                            open(); // Trigger the click handler\n                                          }\n                                        }}\n                                        aria-label={__(\n                                          \"Edit image\",\n                                          \"md-prime\"\n                                        )}\n                                      ></i>\n                                    </Tooltip>\n                                    <Tooltip\n                                      text={__(\"Remove Image\", \"md-prime\")}\n                                    >\n                                      <i\n                                        className=\"dashicons dashicons-no-alt remove-image\"\n                                        onClick={() => {\n                                          const toDelete =\n                                            // eslint-disable-next-line no-alert\n                                            confirm(\n                                              __(\n                                                \"Are you sure you want to delete this image?\",\n                                                \"md-prime\"\n                                              )\n                                            );\n                                          if (toDelete) {\n                                            setAttributes({\n                                              aheadPhaseImage: \"\",\n                                            });\n                                          }\n                                        }}\n                                        role=\"button\"\n                                        tabIndex={0}\n                                        onKeyDown={(e) => {\n                                          if (\n                                            e.key === \"Enter\" ||\n                                            e.key === \" \"\n                                          ) {\n                                            e.preventDefault();\n                                            setAttributes({\n                                              aheadPhaseImage: \"\",\n                                            });\n                                          }\n                                        }}\n                                        aria-label={__(\n                                          \"Remove image\",\n                                          \"md-prime\"\n                                        )}\n                                      ></i>\n                                    </Tooltip>\n                                  </>\n                                ) : (\n                                  <div className=\"upload-wrap\">\n                                    <Button\n                                      onClick={open}\n                                      className=\"button media_and_text__upload_btn\"\n                                    >\n                                      <Tooltip\n                                        text={__(\"Upload Image\", \"md-prime\")}\n                                      >\n                                        <i className=\"dashicons dashicons-upload\"></i>\n                                      </Tooltip>\n                                    </Button>\n                                  </div>\n                                )}\n                              </>\n                            )}\n                          />\n                        </MediaUploadCheck>\n                      </div>\n                      {aheadPhaseImage ? (\n                        <img src={aheadPhaseImage} alt={\"Slider Icon\"} />\n                      ) : (\n                        <img src={siteURL + placeholder} alt={\"Slider Icon\"} />\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n              {enableAheadContent && (\n              <RichText\n                style={{ color: aheadContentColor }}\n                tagName=\"p\"\n                className=\"content\"\n                name=\"content\"\n                placeholder={__(\"Enter Paragraph…\")}\n                value={aheadContent}\n                onChange={(value) => setAttributes({ aheadContent: value })}\n              />\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"md_timeline_phase_block behind\">\n          <div className=\"md_timeline_phase_wrapper\">\n            <div className=\"md_timeline_phase_icon\">\n              <div className=\"md_timeline__phase-caution\">\n                <i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n              </div>\n            </div>\n            <div className=\"md_timeline_phase_content\">\n              <div className=\"timeline__phase-card\"\n                style={\n                  enableBehindPhaseImage\n                    ? {\n                        background: `linear-gradient(270deg, #f7f7f7 75%, ${behindPhaseImageBGColor} 25%)`,\n                      }\n                    : {\n                        background: \"#f7f7f7\",\n                      }\n                }\n              >\n                <RichText\n                  style={{\n                    color: behindHeadingColor,\n                  }}\n                  tagName=\"h4\"\n                  className=\"heading\"\n                  name=\"behindHeading\"\n                  placeholder={__(\"Enter Title\")}\n                  value={behindHeading}\n                  onChange={(value) => setAttributes({ behindHeading: value })}\n                />\n                {enableBehindPhaseImage && (\n                  <div className=\"timeline__phase-image\">\n                    <div className=\"md-prime-block-control image-preview image-controle-visible-hover\">\n                      <div\n                        className={`image-controls small-icons icon-center-fixed`}\n                      >\n                        <MediaUploadCheck>\n                          <MediaUpload\n                            onSelect={(media) =>\n                              setAttributes({\n                                behindPhaseImage: media.url,\n                              })\n                            }\n                            allowedTypes={[\"image\"]}\n                            value={behindPhaseImage}\n                            render={({ open }) => (\n                              <>\n                                {behindPhaseImage ? (\n                                  <>\n                                    <Tooltip\n                                      text={__(\"Edit Image\", \"md-prime\")}\n                                    >\n                                      <i\n                                        className=\"dashicons dashicons-edit edit-image\"\n                                        onClick={open}\n                                        role=\"button\"\n                                        tabIndex={0}\n                                        onKeyDown={(e) => {\n                                          if (\n                                            e.key === \"Enter\" ||\n                                            e.key === \" \"\n                                          ) {\n                                            e.preventDefault(); // Prevent default action for space key\n                                            open(); // Trigger the click handler\n                                          }\n                                        }}\n                                        aria-label={__(\n                                          \"Edit image\",\n                                          \"md-prime\"\n                                        )}\n                                      ></i>\n                                    </Tooltip>\n                                    <Tooltip\n                                      text={__(\"Remove Image\", \"md-prime\")}\n                                    >\n                                      <i\n                                        className=\"dashicons dashicons-no-alt remove-image\"\n                                        onClick={() => {\n                                          const toDelete =\n                                            // eslint-disable-next-line no-alert\n                                            confirm(\n                                              __(\n                                                \"Are you sure you want to delete this image?\",\n                                                \"md-prime\"\n                                              )\n                                            );\n                                          if (toDelete) {\n                                            setAttributes({\n                                              behindPhaseImage: \"\",\n                                            });\n                                          }\n                                        }}\n                                        role=\"button\"\n                                        tabIndex={0}\n                                        onKeyDown={(e) => {\n                                          if (\n                                            e.key === \"Enter\" ||\n                                            e.key === \" \"\n                                          ) {\n                                            e.preventDefault();\n                                            setAttributes({\n                                              behindPhaseImage: \"\",\n                                            });\n                                          }\n                                        }}\n                                        aria-label={__(\n                                          \"Remove image\",\n                                          \"md-prime\"\n                                        )}\n                                      ></i>\n                                    </Tooltip>\n                                  </>\n                                ) : (\n                                  <div className=\"upload-wrap\">\n                                    <Button\n                                      onClick={open}\n                                      className=\"button media_and_text__upload_btn\"\n                                    >\n                                      <Tooltip\n                                        text={__(\"Upload Image\", \"md-prime\")}\n                                      >\n                                        <i className=\"dashicons dashicons-upload\"></i>\n                                      </Tooltip>\n                                    </Button>\n                                  </div>\n                                )}\n                              </>\n                            )}\n                          />\n                        </MediaUploadCheck>\n                      </div>\n                      {behindPhaseImage ? (\n                        <img src={behindPhaseImage} alt={\"Slider Icon\"} />\n                      ) : (\n                        <img src={siteURL + placeholder} alt={\"Slider Icon\"} />\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n              {enableBehindContent && (\n              <RichText\n                style={{\n                  color: behindContentColor,\n                }}\n                tagName=\"p\"\n                className=\"content\"\n                name=\"behindContent\"\n                placeholder={__(\"Enter Paragraph…\")}\n                value={behindContent}\n                onChange={(value) => setAttributes({ behindContent: value })}\n              />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save() {\n\treturn <InnerBlocks.Content />\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-timeline-phase/index\": 0,\n\t\"blocks/md-timeline-phase/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_anitian_fse_v2\"] = self[\"webpackChunkmd_anitian_fse_v2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-timeline-phase/style-index\"], () => (__webpack_require__(\"./src/blocks/md-timeline-phase/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","RichText","MediaUploadCheck","MediaUpload","PanelColorSettings","InspectorControls","PanelBody","ToggleControl","Tooltip","Button","placeholder","Edit","attributes","setAttributes","phaseIcon","aheadHeading","enableAheadContent","aheadContent","behindHeading","enableBehindContent","behindContent","enableAheadPhaseImage","aheadPhaseImage","enableBehindPhaseImage","behindPhaseImage","aheadHeadingColor","aheadContentColor","behindHeadingColor","behindContentColor","aheadPhaseImageBGColor","behindPhaseImageBGColor","siteURL","window","location","origin","createElement","title","label","checked","onChange","value","initialOpen","colorSettings","className","onSelect","media","url","allowedTypes","render","open","Fragment","text","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","toDelete","confirm","src","alt","style","background","color","tagName","name","registerBlockType","save","metadata","edit","InnerBlocks","Content"],"sourceRoot":""}