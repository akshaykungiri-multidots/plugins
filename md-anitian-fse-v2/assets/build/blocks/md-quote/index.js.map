{"version":3,"file":"blocks/md-quote/index.js","mappings":"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CA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-anitian-fse-v2/./src/blocks/md-quote/edit.js","webpack://md-anitian-fse-v2/./src/blocks/md-quote/index.js","webpack://md-anitian-fse-v2/./src/blocks/md-quote/save.js","webpack://md-anitian-fse-v2/./src/blocks/md-quote/style.scss?5844","webpack://md-anitian-fse-v2/external window \"React\"","webpack://md-anitian-fse-v2/external window [\"wp\",\"blockEditor\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"blocks\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"components\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"element\"]","webpack://md-anitian-fse-v2/external window [\"wp\",\"i18n\"]","webpack://md-anitian-fse-v2/webpack/bootstrap","webpack://md-anitian-fse-v2/webpack/runtime/chunk loaded","webpack://md-anitian-fse-v2/webpack/runtime/compat get default export","webpack://md-anitian-fse-v2/webpack/runtime/define property getters","webpack://md-anitian-fse-v2/webpack/runtime/hasOwnProperty shorthand","webpack://md-anitian-fse-v2/webpack/runtime/make namespace object","webpack://md-anitian-fse-v2/webpack/runtime/jsonp chunk loading","webpack://md-anitian-fse-v2/webpack/before-startup","webpack://md-anitian-fse-v2/webpack/startup","webpack://md-anitian-fse-v2/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport {\n  useBlockProps,\n  InspectorControls,\n  MediaUpload,\n  PanelColorSettings,\n  RichText\n} from \"@wordpress/block-editor\";\n\nimport { Fragment } from \"@wordpress/element\";\n\nimport {\n  PanelBody,\n  Button,\n  ToggleControl\n} from \"@wordpress/components\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    quoteIcon,\n    quoteText,\n    quoteBackgroundColor,\n    quoteTextColor,\n    showQuoteIcon\n  } = attributes;\n\n  return (\n    <div {...useBlockProps({ className: \"md_quote_block\" })}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\", \"md-anitian-fse-v2\")}>\n          <ToggleControl\n            label={__(\"Show Quote Icon\", \"md-anitian-fse-v2\")}\n            checked={showQuoteIcon}\n            onChange={(value) => setAttributes({ showQuoteIcon: value })}\n          />\n          {showQuoteIcon && (\n            <div className=\"setting-row\">\n              <label htmlFor=\"play-button-image\">\n                {__(\"Play Button Image\", \"md-prime\")}\n              </label>\n              <div>\n                {!quoteIcon ? (\n                  <MediaUpload\n                    onSelect={(selectedImage) => {\n                      setAttributes({\n                        quoteIcon: selectedImage.url,\n                      });\n                    }}\n                    allowedTypes={[\"image\"]}\n                    value={quoteIcon}\n                    render={({ open }) => (\n                      <Button onClick={open} className=\"button button-large\">\n                        {__(\"Upload Image\", \"md-prime\")}\n                      </Button>\n                    )}\n                  />\n                ) : (\n                  <Fragment>\n                    <div className=\"image-preview\">\n                      <img src={quoteIcon} alt=\"Play-button-image-preview\" />\n                    </div>\n                    <Button\n                      onClick={() => {\n                        setAttributes({\n                          quoteIcon: \"\",\n                        });\n                      }}\n                      className=\"is-link is-destructive\"\n                    >\n                      {__(\"Remove Image\", \"md-prime\")}\n                    </Button>\n                  </Fragment>\n                )}\n              </div>\n            </div>\n          )}\n        </PanelBody>\n        <PanelBody title={__(\"Color Settings\", \"md-anitian-fse-v2\")}>\n          <PanelColorSettings\n            title={__(\"Color Settings\", \"md-anitian-fse-v2\")}\n            colorSettings={[\n              {\n                value: quoteBackgroundColor,\n                onChange: (value) =>\n                  setAttributes({ quoteBackgroundColor: value }),\n                label: __(\"Background Color\", \"md-anitian-fse-v2\"),\n              },\n              {\n                value: quoteTextColor,\n                onChange: (value) =>\n                  setAttributes({ quoteTextColor: value }),\n                label: __(\"Text Color\", \"md-anitian-fse-v2\"),\n              },\n            ]}\n          />\n        </PanelBody>\n      </InspectorControls>\n      <div className=\"md_quote_inner\" style={{ backgroundColor: quoteBackgroundColor }}>\n        {showQuoteIcon && quoteIcon && (\n          <img src={quoteIcon} alt=\"quote-icon\" className=\"quote-icon\" />\n        )}\n        <RichText\n          tagName=\"p\"\n          placeholder={__(\"Write Quote Here\", \"md-anitian-fse-v2\")}\n          value={quoteText}\n          onChange={(value) => setAttributes({ quoteText: value })}\n          style={{\n            color: quoteTextColor,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, RichText } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const {\n    quoteIcon,\n    quoteText,\n    quoteBackgroundColor,\n    quoteTextColor,\n    showQuoteIcon\n  } = attributes;\n  return (\n    <div\n      {...useBlockProps.save({\n        className: \"md_quote_block\",\n      })}\n    >\n      <div className=\"md_quote_inner\" style={{ backgroundColor: quoteBackgroundColor }}>\n        {showQuoteIcon && quoteIcon && (\n          <img src={quoteIcon} alt=\"quote-icon\" className=\"quote-icon\" />\n        )}\n        <RichText.Content\n          tagName=\"p\"\n          placeholder={__(\"Write Quote Here\", \"md-anitian-fse-v2\")}\n          value={quoteText}\n          style={{\n            color: quoteTextColor,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-quote/index\": 0,\n\t\"blocks/md-quote/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_anitian_fse_v2\"] = self[\"webpackChunkmd_anitian_fse_v2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-quote/style-index\"], () => (__webpack_require__(\"./src/blocks/md-quote/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","MediaUpload","PanelColorSettings","RichText","Fragment","PanelBody","Button","ToggleControl","Edit","attributes","setAttributes","quoteIcon","quoteText","quoteBackgroundColor","quoteTextColor","showQuoteIcon","createElement","className","title","label","checked","onChange","value","htmlFor","onSelect","selectedImage","url","allowedTypes","render","open","onClick","src","alt","colorSettings","style","backgroundColor","tagName","placeholder","color","registerBlockType","save","metadata","edit","Content"],"sourceRoot":""}