{"version":3,"file":"blocks/md-banner-text/index.js","mappings":"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ACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-crafto-beauty/./src/blocks/md-banner-text/edit.js","webpack://md-crafto-beauty/./src/blocks/md-banner-text/index.js","webpack://md-crafto-beauty/./src/blocks/md-banner-text/save.js","webpack://md-crafto-beauty/./src/blocks/md-banner-text/style.scss?5510","webpack://md-crafto-beauty/external window \"React\"","webpack://md-crafto-beauty/external window [\"wp\",\"blockEditor\"]","webpack://md-crafto-beauty/external window [\"wp\",\"blocks\"]","webpack://md-crafto-beauty/external window [\"wp\",\"components\"]","webpack://md-crafto-beauty/external window [\"wp\",\"i18n\"]","webpack://md-crafto-beauty/webpack/bootstrap","webpack://md-crafto-beauty/webpack/runtime/chunk loaded","webpack://md-crafto-beauty/webpack/runtime/compat get default export","webpack://md-crafto-beauty/webpack/runtime/define property getters","webpack://md-crafto-beauty/webpack/runtime/hasOwnProperty shorthand","webpack://md-crafto-beauty/webpack/runtime/make namespace object","webpack://md-crafto-beauty/webpack/runtime/jsonp chunk loading","webpack://md-crafto-beauty/webpack/before-startup","webpack://md-crafto-beauty/webpack/startup","webpack://md-crafto-beauty/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport {\n  useBlockProps,\n  InspectorControls,\n  PanelColorSettings,\n  RichText,\n} from \"@wordpress/block-editor\";\n\nimport {\n  PanelBody,\n  ToggleControl,\n  GradientPicker,\n} from \"@wordpress/components\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    subHeading,\n    heading,\n    description,\n    showHeading,\n    showSubHeading,\n    showDescription,\n    subHeadingColor,\n    headingColor,\n    descriptionColor,\n    buttonLink,\n    showButton,\n    buttonColor,\n    buttonBackgroundColor,\n    buttonHoverColor,\n    buttonHoverBackgroundColor,\n  } = attributes;\n\n  return (\n    <div {...useBlockProps()}>\n      <InspectorControls>\n        <PanelBody\n          title={__(\"Toggle Settings\", \"md-logo-slider\")}\n          initialOpen={true}\n        >\n          <ToggleControl\n            label={__(\"Show Heading\", \"md-logo-slider\")}\n            checked={showHeading}\n            onChange={(value) => setAttributes({ showHeading: value })}\n          />\n          <ToggleControl\n            label={__(\"Show Sub Heading\", \"md-logo-slider\")}\n            checked={showSubHeading}\n            onChange={(value) => setAttributes({ showSubHeading: value })}\n          />\n          <ToggleControl\n            label={__(\"Show Description\", \"md-logo-slider\")}\n            checked={showDescription}\n            onChange={(value) => setAttributes({ showDescription: value })}\n          />\n        </PanelBody>\n        <PanelBody title={__(\"Button Settings\")} initialOpen={false}>\n          <ToggleControl\n            label={__(\"Show Button\", \"md-crafto-beauty\")}\n            checked={showButton}\n            onChange={(value) => setAttributes({ showButton: value })}\n          />\n          {showButton && (\n            <div className=\"settings-row\">\n              <PanelColorSettings\n                title={__(\"Button Color Settings\", \"md-storyful-fse-full\")}\n                initialOpen={false}\n                colorSettings={[\n                  {\n                    value: buttonColor,\n                    onChange: (newColor) =>\n                      setAttributes({ buttonColor: newColor }),\n                    label: __(\"Button Font Color\"),\n                  },\n                  {\n                    value: buttonHoverColor,\n                    onChange: (newColor) =>\n                      setAttributes({ buttonHoverColor: newColor }),\n                    label: __(\"Button Hover Font Color\"),\n                  },\n                ]}\n              />\n              <div className=\"settings-row\">\n                <label htmlFor=\"buttonBackgroundColor\">\n                  {__(\"Button Background Color\")}\n                </label>\n                <GradientPicker\n                  id=\"buttonBackgroundColor\"\n                  label={__(\"Button Background Color\")}\n                  value={buttonBackgroundColor ? buttonBackgroundColor : null}\n                  onChange={(value) =>\n                    setAttributes({ buttonBackgroundColor: value })\n                  }\n                  gradients={[\n                    {\n                      name: \"Gradient 1\",\n                      gradient:\n                        \"linear-gradient(90deg, #C73727 0%, #E76A24 100.28%)\",\n                    },\n                    {\n                      name: \"Gradient 2\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                    {\n                      name: \"Gradient 3\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                  ]}\n                />\n              </div>\n              <div className=\"settings-row\">\n                <label htmlFor=\"buttonHoverBackgroundColor\">\n                  {__(\"Button Hover Background Color\")}\n                </label>\n                <GradientPicker\n                  id=\"buttonHoverBackgroundColor\"\n                  label={__(\"Button Hover Background Color\")}\n                  value={\n                    buttonHoverBackgroundColor\n                      ? buttonHoverBackgroundColor\n                      : null\n                  }\n                  onChange={(value) =>\n                    setAttributes({ buttonHoverBackgroundColor: value })\n                  }\n                  gradients={[\n                    {\n                      name: \"Gradient 1\",\n                      gradient:\n                        \"linear-gradient(90deg, #C73727 0%, #E76A24 100.28%)\",\n                    },\n                    {\n                      name: \"Gradient 2\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                    {\n                      name: \"Gradient 3\",\n                      gradient: \"linear-gradient(45deg, #f3ec78, #af4261)\",\n                    },\n                  ]}\n                />\n              </div>\n            </div>\n          )}\n        </PanelBody>\n        <PanelBody\n          title={__(\"Color Settings\", \"md-logo-slider\")}\n          initialOpen={false}\n        >\n          <PanelColorSettings\n            title={__(\"Color Settings\", \"md-logo-slider\")}\n            colorSettings={[\n              {\n                value: headingColor,\n                onChange: (newColor) =>\n                  setAttributes({ headingColor: newColor }),\n                label: __(\"Heading Color\", \"md-logo-slider\"),\n              },\n              {\n                value: subHeadingColor,\n                onChange: (newColor) =>\n                  setAttributes({ subHeadingColor: newColor }),\n                label: __(\"Sub Heading Color\", \"md-logo-slider\"),\n              },\n              {\n                value: descriptionColor,\n                onChange: (newColor) =>\n                  setAttributes({ descriptionColor: newColor }),\n                label: __(\"Description Color\", \"md-logo-slider\"),\n              }\n            ]}\n          />\n        </PanelBody>\n      </InspectorControls>\n      <style>\n        {`\n          .md_crafto_beauty_icon_block__btn {\n            color: ${buttonColor};\n            background: ${buttonBackgroundColor};\n          }\n          .md_crafto_beauty_icon_block__btn:hover {\n            color: ${buttonHoverColor} !important;\n            background: ${buttonHoverBackgroundColor};\n          }\n        `}\n      </style>\n      <div className=\"md_banner_text\">\n        <div className=\"md_banner_text__wrapper\">\n          <div className=\"md_banner_text__heading_wrapper\">\n            {showSubHeading && (\n              <RichText\n                className=\"md_banner_text__sub_heading\"\n                tagName=\"p\"\n                value={subHeading}\n                onChange={(value) => setAttributes({ subHeading: value })}\n                placeholder={__(\"Sub Heading\", \"md-logo-slider\")}\n                style={{ color: subHeadingColor }}\n              />\n            )}\n            {showHeading && (\n              <RichText\n                tagName=\"h2\"\n                className=\"md_banner_text__heading\"\n                value={heading}\n                onChange={(value) => setAttributes({ heading: value })}\n                placeholder={__(\"Heading\", \"md-logo-slider\")}\n                style={{ color: headingColor }}\n              />\n            )}\n            {showDescription && (\n              <RichText\n                tagName=\"p\"\n                className=\"md_banner_text__description\"\n                value={description}\n                onChange={(value) => setAttributes({ description: value })}\n                placeholder={__(\"Description\", \"md-logo-slider\")}\n                style={{ color: descriptionColor }}\n              />\n            )}\n            <div className=\"md_crafto_beauty_icon_block__btn_wrapper\">\n              {showButton && (\n                <div className=\"btn-anitian md_crafto_beauty_icon_block__btn md-btn-main btn-extra-large has-right-arrow\">\n                  <RichText\n                    tagName=\"span\"\n                    value={buttonLink}\n                    onChange={(value) => setAttributes({ buttonLink: value })}\n                    placeholder={__(\"Enter Button Text\", \"md-crafto-beauty\")}\n                  />\n                  <i className=\"fa-solid fa-arrow-right\"></i>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, RichText } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const {\n    subHeading,\n    heading,\n    description,\n    showHeading,\n    showSubHeading,\n    showDescription,\n    subHeadingColor,\n    headingColor,\n    descriptionColor,\n    buttonLink,\n    showButton,\n    buttonColor,\n    buttonBackgroundColor,\n    buttonHoverColor,\n    buttonHoverBackgroundColor,\n  } = attributes;\n  return (\n    <div {...useBlockProps.save()}>\n      <style>\n        {`\n          .md_crafto_beauty_icon_block__btn {\n            color: ${buttonColor};\n            background: ${buttonBackgroundColor};\n          }\n          .md_crafto_beauty_icon_block__btn:hover {\n            color: ${buttonHoverColor} !important;\n            background: ${buttonHoverBackgroundColor};\n          }\n        `}\n      </style>\n      <div className=\"md_banner_text\">\n        <div className=\"md_banner_text__wrapper\">\n          <div className=\"md_banner_text__heading_wrapper\">\n            {showSubHeading && (\n              <RichText.Content\n                className=\"md_banner_text__sub_heading\"\n                tagName=\"p\"\n                value={subHeading}\n                placeholder={__(\"Sub Heading\", \"md-logo-slider\")}\n                style={{ color: subHeadingColor }}\n              />\n            )}\n            {showHeading && (\n              <RichText.Content\n                tagName=\"h2\"\n                className=\"md_banner_text__heading\"\n                value={heading}\n                placeholder={__(\"Heading\", \"md-logo-slider\")}\n                style={{ color: headingColor }}\n              />\n            )}\n            {showDescription && (\n              <RichText.Content\n                tagName=\"p\"\n                className=\"md_banner_text__description\"\n                value={description}\n                placeholder={__(\"Description\", \"md-logo-slider\")}\n                style={{ color: descriptionColor }}\n              />\n            )}\n            <div className=\"md_crafto_beauty_icon_block__btn_wrapper\">\n              {showButton && (\n                <div className=\"btn-anitian md_crafto_beauty_icon_block__btn md-btn-main btn-extra-large has-right-arrow\">\n                  <RichText.Content\n                    tagName=\"span\"\n                    value={buttonLink}\n                    placeholder={__(\"Enter Button Text\", \"md-crafto-beauty\")}\n                  />\n                  <i className=\"fa-solid fa-arrow-right\"></i>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-banner-text/index\": 0,\n\t\"blocks/md-banner-text/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_crafto_beauty\"] = self[\"webpackChunkmd_crafto_beauty\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-banner-text/style-index\"], () => (__webpack_require__(\"./src/blocks/md-banner-text/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","PanelColorSettings","RichText","PanelBody","ToggleControl","GradientPicker","Edit","attributes","setAttributes","subHeading","heading","description","showHeading","showSubHeading","showDescription","subHeadingColor","headingColor","descriptionColor","buttonLink","showButton","buttonColor","buttonBackgroundColor","buttonHoverColor","buttonHoverBackgroundColor","createElement","title","initialOpen","label","checked","onChange","value","className","colorSettings","newColor","htmlFor","id","gradients","name","gradient","tagName","placeholder","style","color","registerBlockType","save","metadata","edit","Content"],"sourceRoot":""}