{"version":3,"file":"blocks/md-quotes/index.js","mappings":"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;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-pointcentral-fse/./src/blocks/md-quotes/edit.js","webpack://md-pointcentral-fse/./src/blocks/md-quotes/index.js","webpack://md-pointcentral-fse/./src/blocks/md-quotes/save.js","webpack://md-pointcentral-fse/./src/blocks/md-quotes/style.scss?8c97","webpack://md-pointcentral-fse/external window \"React\"","webpack://md-pointcentral-fse/external window [\"wp\",\"blockEditor\"]","webpack://md-pointcentral-fse/external window [\"wp\",\"blocks\"]","webpack://md-pointcentral-fse/external window [\"wp\",\"components\"]","webpack://md-pointcentral-fse/external window [\"wp\",\"element\"]","webpack://md-pointcentral-fse/external window [\"wp\",\"i18n\"]","webpack://md-pointcentral-fse/webpack/bootstrap","webpack://md-pointcentral-fse/webpack/runtime/chunk loaded","webpack://md-pointcentral-fse/webpack/runtime/compat get default export","webpack://md-pointcentral-fse/webpack/runtime/define property getters","webpack://md-pointcentral-fse/webpack/runtime/hasOwnProperty shorthand","webpack://md-pointcentral-fse/webpack/runtime/make namespace object","webpack://md-pointcentral-fse/webpack/runtime/jsonp chunk loading","webpack://md-pointcentral-fse/webpack/before-startup","webpack://md-pointcentral-fse/webpack/startup","webpack://md-pointcentral-fse/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport {\n  useBlockProps,\n  InspectorControls,\n  MediaUpload,\n  RichText,\n  PanelColorSettings,\n} from \"@wordpress/block-editor\";\n\nimport {\n  PanelBody,\n  Button,\n  ToggleControl,\n  Tooltip,\n} from \"@wordpress/components\";\n\nimport { useState } from \"@wordpress/element\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n  const {\n    quoteItems,\n    quoteIcon,\n    quoteBackgroundColor,\n    quoteTextColor,\n    quoteTitleColor,\n    showQuoteTitle,\n    showQuoteIcon,\n    showQuoteAuthor,\n  } = attributes;\n  const addStaticPostObj = () => {\n    const staticPostObj = [\n      ...quoteItems,\n      {\n        id: quoteItems.length + 1,\n        quoteText: \"\",\n        quoteAuthor: \"\",\n      },\n    ];\n    setAttributes({ quoteItems: staticPostObj });\n  };\n  const updateStaticPostObj = (index, key, value) => {\n    const updatedStaticPostObj = [...quoteItems];\n    updatedStaticPostObj[index][key] = value;\n    setAttributes({ quoteItems: updatedStaticPostObj });\n  };\n  const removeStaticPostObj = (index) => {\n    const updatedStaticPostObj = [...quoteItems];\n    updatedStaticPostObj.splice(index, 1);\n    if (currentItem >= updatedStaticPostObj.length) {\n      setCurrentItem(updatedStaticPostObj.length - 1); // Set to last slide if current is out of bounds\n    }\n    setAttributes({ quoteItems: updatedStaticPostObj });\n  };\n  const moveItem = (oldIndex, newIndex) => {\n    const arrayCopy = [...quoteItems];\n    arrayCopy[oldIndex] = quoteItems[newIndex];\n    arrayCopy[newIndex] = quoteItems[oldIndex];\n\n    setAttributes({\n      quoteItems: arrayCopy,\n    });\n    setCurrentItem(newIndex);\n  };\n\n  const [currentItem, setCurrentItem] = useState(0);\n\n  return (\n    <div {...useBlockProps({ className: \"md_quote_slider\" })}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\", \"md-prime\")}>\n          <div className=\"setting-row\">\n            <label htmlFor=\"background-image\">\n              {__(\"Quote Image\", \"md-prime\")}\n            </label>\n            <div>\n              {!quoteIcon ? (\n                <MediaUpload\n                  onSelect={(selectedImage) => {\n                    setAttributes({\n                      quoteIcon: selectedImage.url,\n                    });\n                  }}\n                  allowedTypes={[\"image\"]}\n                  value={quoteIcon}\n                  render={({ open }) => (\n                    <Button onClick={open} className=\"button button-large\">\n                      {__(\"Upload Image\", \"md-prime\")}\n                    </Button>\n                  )}\n                />\n              ) : (\n                <>\n                  <div className=\"image-preview\">\n                    <img src={quoteIcon} alt=\"Background-image-preview\" />\n                  </div>\n                  <Button\n                    onClick={() => {\n                      setAttributes({\n                        quoteIcon: \"\",\n                      });\n                    }}\n                    className=\"is-link is-destructive\"\n                  >\n                    {__(\"Remove Image\", \"md-prime\")}\n                  </Button>\n                </>\n              )}\n            </div>\n          </div>\n        </PanelBody>\n        <PanelBody\n          title={__(\"Toggle Settings\", \"md-storyful-fse-full\")}\n          initialOpen={false}\n        >\n          <ToggleControl\n            label={__(\"Show Quote Text\", \"md-storyful-fse-full\")}\n            checked={showQuoteTitle}\n            onChange={(value) => setAttributes({ showQuoteTitle: value })}\n          />\n          <ToggleControl\n            label={__(\"Show Quote Icon\", \"md-storyful-fse-full\")}\n            checked={showQuoteIcon}\n            onChange={(value) => setAttributes({ showQuoteIcon: value })}\n          />\n          <ToggleControl\n            label={__(\"Show Quote Author\", \"md-storyful-fse-full\")}\n            checked={showQuoteAuthor}\n            onChange={(value) => setAttributes({ showQuoteAuthor: value })}\n          />\n        </PanelBody>\n        <PanelBody\n          title={__(\"Color Settings\", \"md-storyful-fse-full\")}\n          initialOpen={false}\n        >\n          <PanelColorSettings\n            title={__(\"Typography Colors\", \"md-storyful-fse-full\")}\n            initialOpen={false}\n            colorSettings={[\n              {\n                value: quoteBackgroundColor,\n                onChange: (newColor) =>\n                  setAttributes({\n                    quoteBackgroundColor: newColor,\n                  }),\n                label: __(\"Quote Background Color\"),\n              },\n              {\n                value: quoteTextColor,\n                onChange: (newColor) =>\n                  setAttributes({\n                    quoteTextColor: newColor,\n                  }),\n                label: __(\"Quote Text Font Color\"),\n              },\n              {\n                value: quoteTitleColor,\n                onChange: (newColor) =>\n                  setAttributes({\n                    quoteTitleColor: newColor,\n                  }),\n                label: __(\"Quote Author Font Color\"),\n              },\n            ]}\n          />\n        </PanelBody>\n      </InspectorControls>\n      <div className=\"md-quote-slider__inner\" style={{ backgroundColor: quoteBackgroundColor }}>\n        <div className=\"md-quote-slider__items\">\n          {quoteItems &&\n            quoteItems.map((postObj, index) => (\n              <blockquote\n                className={`md-quote-slider__item show-items-hover-wrap ${\n                  index === currentItem ? \"active\" : \"no-trans\"\n                }`}\n                key={index}\n              >\n                <div className=\"item-action-wrap show-items-hover small-icons\">\n                  <div className=\"move-item\">\n                    {0 < index && (\n                      <Tooltip text={__(\"Move Left\", \"md-prime\")}>\n                        <span\n                          className=\"dashicons dashicons-arrow-left-alt move-left\"\n                          onClick={() => moveItem(index, index - 1)}\n                          onKeyDown={(event) => {\n                            if (event.key === \"Enter\" || event.key === \" \") {\n                              moveItem(index, index - 1);\n                            }\n                          }}\n                          role=\"button\"\n                          tabIndex={0}\n                          aria-label=\"Move item left\"\n                        ></span>\n                      </Tooltip>\n                    )}\n                    {index + 1 < quoteItems.length && (\n                      <Tooltip text={__(\"Move Right\", \"md-prime\")}>\n                        <span\n                          className=\"dashicons dashicons-arrow-right-alt move-right\"\n                          role=\"button\"\n                          tabIndex=\"0\"\n                          onClick={() => moveItem(index, index + 1)}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\" || e.key === \" \") {\n                              moveItem(index, index + 1);\n                            }\n                          }}\n                          aria-label=\"Move item right\"\n                        ></span>\n                      </Tooltip>\n                    )}\n                  </div>\n                  {1 < quoteItems.length && (\n                    <Tooltip text={__(\"Remove Item\", \"md-prime\")}>\n                      <i\n                        className=\"remove-item dashicons dashicons-no-alt\"\n                        role=\"button\"\n                        tabIndex=\"0\"\n                        onClick={() => {\n                          const toDelete =\n                            // eslint-disable-next-line no-alert\n                            confirm(\n                              __(\n                                \"Are you sure you want to delete this item?\",\n                                \"md-prime\"\n                              )\n                            );\n                          if (toDelete) {\n                            removeStaticPostObj(index);\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\" || e.key === \" \") {\n                            const toDelete =\n                              // eslint-disable-next-line no-alert\n                              confirm(\n                                __(\n                                  \"Are you sure you want to delete this item?\",\n                                  \"md-prime\"\n                                )\n                              );\n                            if (toDelete) {\n                              removeStaticPostObj(index);\n                            }\n                          }\n                        }}\n                        aria-label=\"Delete item\"\n                      ></i>\n                    </Tooltip>\n                  )}\n                </div>\n                {showQuoteIcon && (\n                  <div\n                    className=\"image-icon has-bg\"\n                    style={{ backgroundImage: `url(${quoteIcon})` }}\n                  ></div>\n                )}\n                <div className=\"quote-text\">\n                  {showQuoteTitle && (\n                    <RichText\n                      tagName=\"p\"\n                      className=\"quote-text\"\n                      placeholder={__(\"Quote Text\", \"md-prime\")}\n                      value={postObj.quoteText}\n                      onChange={(value) =>\n                        updateStaticPostObj(index, \"quoteText\", value)\n                      }\n                      style={{ color: quoteTextColor }}\n                    />\n                  )}\n                  {showQuoteAuthor && (\n                    <RichText\n                      tagName=\"span\"\n                      className=\"testimonial-name\"\n                      placeholder={__(\"Quote Author\", \"md-prime\")}\n                      value={postObj.quoteAuthor}\n                      style={{ color: quoteTitleColor }}\n                      onChange={(value) =>\n                        updateStaticPostObj(index, \"quoteAuthor\", value)\n                      }\n                    />\n                  )}\n                </div>\n              </blockquote>\n            ))}\n          <div\n            className=\"add-item-wrap\"\n            onClick={addStaticPostObj}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" || e.key === \" \") {\n                e.preventDefault(); // Prevent default action for space key\n                addStaticPostObj(); // Trigger the click handler\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n            aria-label={__(\"Add new item\", \"md-prime\")}\n          >\n            <Tooltip text={__(\"Add New Item\", \"md-prime\")}>\n              <i className=\"add-new-item dashicons dashicons-plus\"></i>\n            </Tooltip>\n          </div>\n        </div>\n        <div className=\"testimonial-next-prev\">\n          <Button\n            onClick={() => {\n              if (currentItem === 0) {\n                setCurrentItem(quoteItems.length - 1);\n              } else {\n                setCurrentItem(currentItem - 1);\n              }\n            }}\n            className=\"prev dashicons dashicons-arrow-left-alt2\"\n            aria-label=\"testimonial previous button\"\n          ></Button>\n          <Button\n            onClick={() => {\n              if (currentItem === quoteItems.length - 1) {\n                setCurrentItem(0);\n              } else {\n                setCurrentItem(currentItem + 1);\n              }\n            }}\n            className=\"next dashicons dashicons-arrow-right-alt2\"\n            aria-label=\"testimonial next button\"\n          ></Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, RichText } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n  const {\n    quoteItems,\n    quoteIcon,\n    quoteBackgroundColor,\n    quoteTextColor,\n    quoteTitleColor,\n    showQuoteTitle,\n    showQuoteIcon,\n    showQuoteAuthor,\n  } = attributes;\n  return (\n    <div {...useBlockProps.save({ className: \"md_quote_slider\" })}>\n      <div\n        className=\"md-quote-slider__inner\"\n        style={{ backgroundColor: quoteBackgroundColor }}\n      >\n        <div className=\"md-quote-slider__items\">\n          {quoteItems &&\n            quoteItems.map((postObj, index) => (\n              <blockquote\n                className={`md-quote-slider__item show-items-hover-wrap ${\n                  index === 0 ? \"active\" : \"no-trans\"\n                }`}\n                key={index}\n              >\n                {showQuoteIcon && (\n                  <div\n                    className=\"image-icon has-bg\"\n                    style={{ backgroundImage: `url(${quoteIcon})` }}\n                  ></div>\n                )}\n                <div className=\"quote-text\">\n                  {showQuoteTitle && (\n                    <RichText.Content\n                      tagName=\"p\"\n                      className=\"quote-text\"\n                      placeholder={__(\"Quote Text\", \"md-prime\")}\n                      value={postObj.quoteText}\n                      style={{ color: quoteTextColor }}\n                    />\n                  )}\n                  {showQuoteAuthor && (\n                    <RichText.Content\n                      tagName=\"span\"\n                      className=\"testimonial-name\"\n                      placeholder={__(\"Quote Author\", \"md-prime\")}\n                      value={postObj.quoteAuthor}\n                      style={{ color: quoteTitleColor }}\n                    />\n                  )}\n                </div>\n              </blockquote>\n            ))}\n        </div>\n        <div className=\"testimonial-next-prev\">\n          <button\n            className=\"prev dashicons dashicons-arrow-left-alt2\"\n            aria-label=\"testimonial previous button\"\n          ></button>\n          <button\n            className=\"next dashicons dashicons-arrow-right-alt2\"\n            aria-label=\"testimonial next button\"\n          ></button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-quotes/index\": 0,\n\t\"blocks/md-quotes/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_pointcentral_fse\"] = self[\"webpackChunkmd_pointcentral_fse\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-quotes/style-index\"], () => (__webpack_require__(\"./src/blocks/md-quotes/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","MediaUpload","RichText","PanelColorSettings","PanelBody","Button","ToggleControl","Tooltip","useState","Edit","attributes","setAttributes","quoteItems","quoteIcon","quoteBackgroundColor","quoteTextColor","quoteTitleColor","showQuoteTitle","showQuoteIcon","showQuoteAuthor","addStaticPostObj","staticPostObj","id","length","quoteText","quoteAuthor","updateStaticPostObj","index","key","value","updatedStaticPostObj","removeStaticPostObj","splice","currentItem","setCurrentItem","moveItem","oldIndex","newIndex","arrayCopy","createElement","className","title","htmlFor","onSelect","selectedImage","url","allowedTypes","render","open","onClick","Fragment","src","alt","initialOpen","label","checked","onChange","colorSettings","newColor","style","backgroundColor","map","postObj","text","onKeyDown","event","role","tabIndex","e","toDelete","confirm","backgroundImage","tagName","placeholder","color","preventDefault","registerBlockType","save","metadata","edit","Content"],"sourceRoot":""}