{"version":3,"file":"blocks/md-posts/index.js","mappings":"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vE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://md-storyful-fse-full/./src/blocks/md-posts/edit.js","webpack://md-storyful-fse-full/./src/blocks/md-posts/index.js","webpack://md-storyful-fse-full/./src/blocks/md-posts/save.js","webpack://md-storyful-fse-full/./src/blocks/md-posts/editor.scss?9d4b","webpack://md-storyful-fse-full/./src/blocks/md-posts/style.scss?99fe","webpack://md-storyful-fse-full/external window \"React\"","webpack://md-storyful-fse-full/external window \"ReactJSXRuntime\"","webpack://md-storyful-fse-full/external window [\"wp\",\"blockEditor\"]","webpack://md-storyful-fse-full/external window [\"wp\",\"blocks\"]","webpack://md-storyful-fse-full/external window [\"wp\",\"components\"]","webpack://md-storyful-fse-full/external window [\"wp\",\"i18n\"]","webpack://md-storyful-fse-full/external window [\"wp\",\"serverSideRender\"]","webpack://md-storyful-fse-full/webpack/bootstrap","webpack://md-storyful-fse-full/webpack/runtime/chunk loaded","webpack://md-storyful-fse-full/webpack/runtime/compat get default export","webpack://md-storyful-fse-full/webpack/runtime/define property getters","webpack://md-storyful-fse-full/webpack/runtime/hasOwnProperty shorthand","webpack://md-storyful-fse-full/webpack/runtime/make namespace object","webpack://md-storyful-fse-full/webpack/runtime/jsonp chunk loading","webpack://md-storyful-fse-full/webpack/before-startup","webpack://md-storyful-fse-full/webpack/startup","webpack://md-storyful-fse-full/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the server side render element.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-server-side-render/\n */\nimport ServerSideRender from \"@wordpress/server-side-render\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/\n */\nimport {\n  useBlockProps,\n  InspectorControls,\n  PanelColorSettings,\n} from \"@wordpress/block-editor\";\n\n/**\n * React hook that is used to mark the components element.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/components/\n */\nimport {\n  PanelBody,\n  SelectControl,\n  ToggleControl,\n  FontSizePicker,\n} from \"@wordpress/components\";\n\nimport { useState, useEffect } from \"react\";\n\nimport metadata from \"./block.json\";\nimport \"./editor.scss\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @param root0\n * @param root0.attributes\n * @param root0.attributes.heading\n * @param root0.setAttributes\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes, className }) {\n  const {\n    enableSearch,\n    enableFilter,\n    numberOfPostsPerRow,\n    numberOfRows,\n    postType,\n    enableNewsLetter,\n    displayNewsLetterAfterRow,\n    enableMostPopular,\n    displayMostPopularAboveOrBelow,\n    postTitleFontSize,\n    postTitleColor,\n    postDateFontSize,\n    postDateColor,\n    mostPopularTitleFontSize,\n    mostPopularTitleColor,\n    mostPopularDescriptionFontSize,\n    mostPopularDescriptionColor,\n  } = attributes;\n\n  const fontSizes = [\n    {\n      name: __(\"S\"),\n      slug: \"small\",\n      size: \"12px\",\n    },\n    {\n      name: __(\"M\"),\n      slug: \"medium\",\n      size: \"18px\",\n    },\n    {\n      name: __(\"L\"),\n      slug: \"large\",\n      size: \"26px\",\n    },\n    {\n      name: __(\"XL\"),\n      slug: \"xtra-large\",\n      size: \"48px\",\n    },\n  ];\n\n  const builtInPostType = [\n    \"page\",\n    \"attachment\",\n    \"nav_menu_item\",\n    \"wp_block\",\n    \"wp_template\",\n    \"wp_template_part\",\n    \"wp_navigation\",\n    \"wp_font_family\",\n    \"wp_font_face\",\n    \"wp_global_styles\",\n  ];\n\n  const [postTypes, setPostTypes] = useState([]);\n\n  useEffect(() => {\n    // Fetch the posttypes not post list and set it as options\n    wp.apiFetch({ path: \"/wp/v2/types\" }).then((response) => {\n      const fetchedPostTypes = Object.keys(response)\n        .filter(function (key) {\n          if (!builtInPostType.includes(response[key].slug)) {\n            return key;\n          }\n        })\n        .map((key) => ({\n          value: key,\n          label: response[key].name,\n          rest_base: response[key].rest_base,\n        }));\n      setPostTypes(fetchedPostTypes);\n    });\n  }, []);\n\n  return (\n    <div {...useBlockProps()}>\n      <InspectorControls>\n        <PanelBody title={__(\"Block Settings\", \"md-storyful-fse-full\")}>\n          {/* Display in selectcontrol */}\n          <SelectControl\n            label={__(\"Post Type\", \"md-storyful-fse-full\")}\n            value={postType}\n            options={postTypes}\n            onChange={(postType) => setAttributes({ postType })}\n          />\n          {/* Display in selectcontrol */}\n          <SelectControl\n            label={__(\"Number of Posts Per Row\", \"md-storyful-fse-full\")}\n            value={numberOfPostsPerRow}\n            options={[\n              { label: \"1\", value: 1 },\n              { label: \"2\", value: 2 },\n              { label: \"3\", value: 3 },\n              { label: \"4\", value: 4 },\n            ]}\n            onChange={(numberOfPostsPerRow) =>\n              setAttributes({ numberOfPostsPerRow })\n            }\n          />\n          {/* Display in selectcontrol */}\n          <SelectControl\n            label={__(\"Number of Rows\", \"md-storyful-fse-full\")}\n            value={numberOfRows}\n            options={[\n              { label: \"1\", value: 1 },\n              { label: \"2\", value: 2 },\n              { label: \"3\", value: 3 },\n              { label: \"4\", value: 4 },\n            ]}\n            onChange={(numberOfRows) => setAttributes({ numberOfRows })}\n          />\n          {/* Display in togglecontrol */}\n          <ToggleControl\n            label={__(\"Enable Search\", \"md-storyful-fse-full\")}\n            checked={enableSearch}\n            onChange={(enableSearch) => setAttributes({ enableSearch })}\n          />\n          {/* Display in togglecontrol */}\n          <ToggleControl\n            label={__(\"Enable Filter\", \"md-storyful-fse-full\")}\n            checked={enableFilter}\n            onChange={(enableFilter) => setAttributes({ enableFilter })}\n          />\n          {/* Display in togglecontrol */}\n          <ToggleControl\n            label={__(\"Enable News Letter\", \"md-storyful-fse-full\")}\n            checked={enableNewsLetter}\n            onChange={(enableNewsLetter) => setAttributes({ enableNewsLetter })}\n          />\n          {/* Display in selectcontrol */}\n          {enableNewsLetter && (\n            <SelectControl\n              label={__(\n                \"Display News Letter After Row\",\n                \"md-storyful-fse-full\"\n              )}\n              value={displayNewsLetterAfterRow}\n              options={[\n                { label: \"1\", value: 1 },\n                { label: \"2\", value: 2 },\n                { label: \"3\", value: 3 },\n                { label: \"4\", value: 4 },\n              ]}\n              onChange={(displayNewsLetterAfterRow) =>\n                setAttributes({ displayNewsLetterAfterRow })\n              }\n            />\n          )}\n          {/* Display in togglecontrol */}\n          <ToggleControl\n            label={__(\"Enable Most Popular\", \"md-storyful-fse-full\")}\n            checked={enableMostPopular}\n            onChange={(enableMostPopular) =>\n              setAttributes({ enableMostPopular })\n            }\n          />\n          {/* Display in selectcontrol */}\n          {enableMostPopular && (\n            <SelectControl\n              label={__(\n                \"Display Most Popular Above Or Below\",\n                \"md-storyful-fse-full\"\n              )}\n              value={displayMostPopularAboveOrBelow}\n              options={[\n                { label: \"Above\", value: \"above\" },\n                { label: \"Below\", value: \"below\" },\n              ]}\n              onChange={(displayMostPopularAboveOrBelow) =>\n                setAttributes({ displayMostPopularAboveOrBelow })\n              }\n            />\n          )}\n        </PanelBody>\n        <PanelBody title={__(\"Typography\", \"md-storyful-fse-full\")}>\n          <label>{__(\"Post Title Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={postTitleFontSize}\n            onChange={(value) => setAttributes({ postTitleFontSize: value })}\n          />\n          <label>{__(\"Post Date Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={postDateFontSize}\n            onChange={(value) => setAttributes({ postDateFontSize: value })}\n          />\n          <label>{__(\"Most Popular Title Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={mostPopularTitleFontSize}\n            onChange={(value) =>\n              setAttributes({ mostPopularTitleFontSize: value })\n            }\n          />\n          <label>{__(\"Most Popular Description Font Size\")}</label>\n          <FontSizePicker\n            fontSizes={fontSizes}\n            value={mostPopularDescriptionFontSize}\n            onChange={(value) =>\n              setAttributes({ mostPopularDescriptionFontSize: value })\n            }\n          />\n        </PanelBody>\n        <PanelColorSettings\n          title={__(\"Typography Colors\", \"md-storyful-fse-full\")}\n          initialOpen={false}\n          colorSettings={[\n            {\n              value: postTitleColor,\n              onChange: (value) => setAttributes({ postTitleColor: value }),\n              label: __(\"Post Title Color\"),\n            },\n            {\n              value: postDateColor,\n              onChange: (value) => setAttributes({ postDateColor: value }),\n              label: __(\"Post Date Color\"),\n            },\n            {\n              value: mostPopularTitleColor,\n              onChange: (value) =>\n                setAttributes({ mostPopularTitleColor: value }),\n              label: __(\"Most Popular Title Color\"),\n            },\n            {\n              value: mostPopularDescriptionColor,\n              onChange: (value) =>\n                setAttributes({ mostPopularDescriptionColor: value }),\n              label: __(\"Most Popular Description Color\"),\n            },\n          ]}\n        />\n      </InspectorControls>\n      <ServerSideRender\n        block={metadata.name}\n        className={className}\n        attributes={{\n          enableSearch,\n          enableFilter,\n          numberOfPostsPerRow,\n          numberOfRows,\n          postType,\n          enableNewsLetter,\n          displayNewsLetterAfterRow,\n          enableMostPopular,\n          displayMostPopularAboveOrBelow,\n          postTitleFontSize,\n          postTitleColor,\n          postDateFontSize,\n          postDateColor,\n          mostPopularTitleFontSize,\n          mostPopularTitleColor,\n          mostPopularDescriptionFontSize,\n          mostPopularDescriptionColor,\n        }}\n      />\n    </div>\n  );\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport './style.scss';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n});\n","/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save() {\n\treturn null;\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/md-posts/index\": 0,\n\t\"blocks/md-posts/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmd_storyful_fse_full\"] = self[\"webpackChunkmd_storyful_fse_full\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/md-posts/style-index\"], () => (__webpack_require__(\"./src/blocks/md-posts/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","ServerSideRender","useBlockProps","InspectorControls","PanelColorSettings","PanelBody","SelectControl","ToggleControl","FontSizePicker","useState","useEffect","metadata","jsx","_jsx","jsxs","_jsxs","Edit","attributes","setAttributes","className","enableSearch","enableFilter","numberOfPostsPerRow","numberOfRows","postType","enableNewsLetter","displayNewsLetterAfterRow","enableMostPopular","displayMostPopularAboveOrBelow","postTitleFontSize","postTitleColor","postDateFontSize","postDateColor","mostPopularTitleFontSize","mostPopularTitleColor","mostPopularDescriptionFontSize","mostPopularDescriptionColor","fontSizes","name","slug","size","builtInPostType","postTypes","setPostTypes","wp","apiFetch","path","then","response","fetchedPostTypes","Object","keys","filter","key","includes","map","value","label","rest_base","children","title","options","onChange","checked","initialOpen","colorSettings","block","registerBlockType","save","edit"],"sourceRoot":""}